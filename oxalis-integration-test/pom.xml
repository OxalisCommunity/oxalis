<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <parent>
        <groupId>no.difi.oxalis</groupId>
        <artifactId>oxalis</artifactId>
        <version>3.2.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <description>
        Oxalis integration test.

        Experiment to see if running with embedded Tomcat will work.
        The idea is to compile and package everything, after which the web container
        is started in the pre-integration-test phase, the .war file is deployed
        and the tests are executed in the integration-test phase.
        After the tests have been executed, the web container is stopped in
        the post-integration-test phase.

        The reason for using failsafe is the fact that Surefire would fail the build
        in the integration-test phase, without taking down the server in the
        post-integration-test phase.

        This implementation uses Tomcat, but you may change this to your liking.

        See http://cargo.codehaus.org/Maven2+plugin for more information.
    </description>

    <artifactId>oxalis-integration-test</artifactId>
    <packaging>jar</packaging>

    <name>oxalis-integration-test</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <servlet.port>8080</servlet.port>
        <url>http://wltdgt02.cc.cec.eu.int:2061/oxalis</url>
        <jdbc.driver>oracle.jdbc.OracleDriver</jdbc.driver>
    </properties>

    <dependencies>

        <!-- Apache HTTP Client -->

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>

        <!-- Oxalis AS2 -->
        <dependency>
            <groupId>no.difi.oxalis</groupId>
            <artifactId>oxalis-as2</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- We need logging as well -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <!-- The Oxalis web application -->
        <dependency>
            <groupId>no.difi.oxalis</groupId>
            <artifactId>oxalis-inbound</artifactId>
            <version>${project.version}</version>
            <type>war</type>
        </dependency>

        <!-- The outbound library of Oxalis -->
        <dependency>
            <groupId>no.difi.oxalis</groupId>
            <artifactId>oxalis-outbound</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>no.difi.oxalis</groupId>
            <artifactId>oxalis-sql</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>no.difi.oxalis</groupId>
            <artifactId>oxalis-jdbc-dbcp</artifactId>
            <version>${project.version}</version>
        </dependency>


        <!-- Gives us access to the Metro stuff -->
        <dependency>
            <groupId>org.glassfish.metro</groupId>
            <artifactId>webservices-rt</artifactId>
            <version>${metro.version}</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <groupId>javax.activation</groupId>
                    <artifactId>activation</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>com.smartbear.soapui</groupId>
                <artifactId>soapui-maven-plugin</artifactId>
                <configuration>
                    <outputFolder>${project.build.directory}/surefire-reports</outputFolder>
                    <junitReport>true</junitReport>
                    <printReport>true</printReport>
                    <soapuiProperties>
                        <property>
                            <name>soapui.logroot</name>
                            <value>${project.build.directory}/soapui/logs/</value>
                        </property>
                        <property>
                            <name>http.nonProxyHosts</name>
                            <value>localhost|127.*|[::1]</value>
                        </property>
                    </soapuiProperties>
                    <testFailIgnore>false</testFailIgnore>
                    <projectFile>src/test/resources/AS2-soapui-project.xml</projectFile>
                    <projectProperties>
                        <value>url=${url}</value>
                        <value>jdbc.driver=${jdbc.driver}</value>
                        <value>jdbc.url=${jdbc.url}</value>
                    </projectProperties>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>${mysql.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>com.oracle</groupId>
                        <artifactId>ojdbc6</artifactId>
                        <version>11.1.0.6.0</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!-- Failsafe will execute tests in the integration-test phase, rather than in the test phase -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.16</version>
                </plugin>

                <!-- Defines the general attributes of the Cargo plugin -->
                <plugin>
                    <groupId>org.codehaus.cargo</groupId>
                    <artifactId>cargo-maven2-plugin</artifactId>
                    <version>1.4.5</version>

                    <configuration>
                        <configuration>
                            <properties>
                                <cargo.servlet.port>${servlet.port}</cargo.servlet.port>
                            </properties>
                        </configuration>
                        <deployables>
                            <!-- References the dependencies section -->
                            <deployable>
                                <groupId>no.difi.oxalis</groupId>
                                <artifactId>oxalis-inbound</artifactId>
                                <type>war</type>
                                <properties>
                                    <!-- Makes our application available at http://localhost:${servlet.port}/oxalis -->
                                    <context>oxalis</context>
                                </properties>
                            </deployable>
                        </deployables>

                        <container>
                            <dependencies>
                                <!-- Declares the Metro framework as a dependency required for the web container -->
                                <dependency>
                                    <groupId>org.glassfish.metro</groupId>
                                    <artifactId>webservices-rt</artifactId>
                                </dependency>
                            </dependencies>
                        </container>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

    </build>

    <profiles>

        <profile>
            <id>it-test</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.codehaus.cargo</groupId>
                            <artifactId>cargo-maven2-plugin</artifactId>
                            <configuration>
                                <container>
                                    <containerId>tomcat7x</containerId>
                                    <zipUrlInstaller>
                                        <url>http://archive.apache.org/dist/tomcat/tomcat-7/v7.0.56/bin/apache-tomcat-7.0.56.zip</url>
                                        <!--  seems like 7.0.57 does not work with these cargo settings, keep using 7.0.57
                                        <url>http://apache.uib.no/tomcat/tomcat-7/v7.0.57/bin/apache-tomcat-7.0.57.zip</url>
                                        -->
                                    </zipUrlInstaller>
                                </container>
                                <configuration>
                                    <!-- Note: this will cause Tomcat to ONLY accept https on 8443 -->
                                    <!-- In order to keep passwords etc. out of the build, the SSL certificate -->
                                    <!-- should be stored separately, for instance in your OXALIS_HOME directory -->
                                    <!-- Configure these properties in your .m2/settings.xml file -->
                                    <properties>
                                        <cargo.servlet.port>8443</cargo.servlet.port>
                                        <cargo.protocol>https</cargo.protocol>
                                        <cargo.tomcat.connector.clientAuth>false</cargo.tomcat.connector.clientAuth>
                                        <cargo.tomcat.connector.sslProtocol>TLS</cargo.tomcat.connector.sslProtocol>
                                        <!-- Declare your SSL password etc in ~/.m2/settings.xml -->
                                        <cargo.tomcat.connector.keystoreFile>${ssl.keystore}</cargo.tomcat.connector.keystoreFile>
                                        <cargo.tomcat.connector.keystorePass>${ssl.password}</cargo.tomcat.connector.keystorePass>
                                        <cargo.tomcat.connector.keyAlias>${ssl.alias}</cargo.tomcat.connector.keyAlias>
                                        <cargo.tomcat.httpSecure>true</cargo.tomcat.httpSecure>
                                        <cargo.logging>medium</cargo.logging>
                                    </properties>
                                </configuration>
                            </configuration>
                            <dependencies>
                            </dependencies>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <!-- Concrete configuration of failsafe-plugin -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>perform-it</id>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <systemProperties>
                                        <property>
                                            <name>servlet.port</name>
                                            <value>${servlet.port}</value>
                                        </property>
                                    </systemProperties>
                                    <excludedGroups>none,difi,manual</excludedGroups>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <!-- See also the pluginManagement section above -->
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <executions>
                            <execution>
                                <!-- Starts the web container in the pre-integration-test phase -->
                                <id>start-cargo</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <configuration>
                                        <properties>
                                            <cargo.logging>medium</cargo.logging>
                                        </properties>
                                    </configuration>
                                </configuration>
                            </execution>
                            <execution>
                                <!-- Stops the web container in the post-integration-test phase -->
                                <id>stop-cargo</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <!-- Enforces that various properties have been set as required -->
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>check-ssl-stuff</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireProperty>
                                            <property>ssl.keystore</property>
                                            <message>Path to SSL keystore (ssl.keystore) required. Add it to .m2/settings.xml</message>
                                        </requireProperty>
                                        <requireProperty>
                                            <property>ssl.password</property>
                                            <message>Password for SSL keystore (ssl.password) required. Add it to .m2/settings.xml</message>
                                        </requireProperty>
                                        <requireProperty>
                                            <property>ssl.alias</property>
                                            <message>
                                                Keystore alias for the SSL certificate (ssl.alias) required. Add it to .m2/settings.xml
                                            </message>
                                        </requireProperty>
                                        <requireFilesExist>
                                            <files>
                                                <file>${ssl.keystore}</file>
                                            </files>
                                        </requireFilesExist>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
